{"version":3,"file":"main.js","mappings":"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","sources":["webpack://globaldog/./src/index.js","webpack://globaldog/./src/scripts/dog.js"],"sourcesContent":["// imports\nimport { fetchSelectedDogs } from \"./scripts/dog\";\nimport { initMap } from \"./scripts/maps\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    fetchSelectedDogs();\n});\n","const breedToCountryMap = {\n    \"chinese-shar-pei\": \"china\",\n    \"bull-terrier\": \"argentina\",\n    \"golden-retriever\": \"india\",\n    \"shih-tzu\": \"philippines\",\n    \"australian-shepherd\": \"united-states\",\n    \"shiba-inu\": \"japan\",\n    rottweiler: \"brazil\",\n    \"doberman-pinscher\": \"russia\",\n};\n\nconst api_key =\n    \"live_IMV5RlpU4XaI26YknUNIxE1fFnIbdBbStDAFX71eTd7LRttKRLdca6c8f2UDhLng\";\n\n// Basic fetch to grab breed info\nconst getDogInfo = (dog) => {\n    return fetch(`https://api.thedogapi.com/v1/breeds/search?q=${dog}`)\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error(\"Something went wrong\");\n            }\n            return response.json();\n        })\n        .then((data) => {\n            return data[0];\n        });\n};\n\n// i.e of how to do grab with async\n// export const getDogImg = async (id) => {\n//     const response = await fetch(\n//         `https://api.thedogapi.com/v1/images/search?breed_ids=${id}\n//         `,\n//         {\n//             headers: {\n//                 \"x-api-key\": api_key,\n//             },\n//         }\n//     );\n//     if (!response.ok) {\n//         throw new Error(\"Something went wrong\");\n//     }\n//     const data = await response.json();\n//     return data;\n// };\n\n// Didnt need an async for this operation\nconst getDogImg = (id) => {\n    return fetch(`https://api.thedogapi.com/v1/images/search?breed_ids=${id}`, {\n        headers: {\n            \"x-api-key\": api_key,\n        },\n    })\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error(\"Something went wrong\");\n            }\n            return response.json();\n        })\n        .then((data) => {\n            return data;\n        });\n};\n\n// Func that calls getInfo/getImg\n// builds a container for each for each of them\n// calls both createDogContainer & createImgContainer\nexport const fetchSelectedDogs = () => {\n    const dogs = [\n        \"Chinese Shar-Pei\",\n        \"Bull Terrier\", //Argentina\n        \"Golden Retriever\", // INDIA\n        \"Shih Tzu\", //Phill\n        \"Australian Shepherd\", // USA\n        \"Shiba Inu\", // Japan\n        \"Rottweiler\", //Brazil\n        \"Doberman Pinscher\", // Russia\n    ];\n\n    // initialize and empty array for conatiners to append to\n    const dogInfoContainers = [];\n    const dogImgContainers = [];\n\n    // Go over the dog Arr and map them\n    // grab every dogs promise(info/img)\n    const dogPromises = dogs.map((dog) => {\n        return getDogInfo(dog)\n            .then((dogData) => {\n                return getDogImg(dogData.id).then((dogImg) => {\n                    return {\n                        dogData,\n                        dogImg,\n                    };\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    });\n    // console.log(dogPromises); -- gives an arry of 8 promises\n\n    // Go thru all the promises and extract the info/img\n    // push to the container\n    return Promise.all(dogPromises).then((results) => {\n        // each result has a DogData and dogImg in it\n        results.forEach((result) => {\n            // console.log(result);\n            dogImgContainers.push(createImgContainer(result.dogImg));\n            dogInfoContainers.push(createDogContainer(result.dogData));\n        });\n\n        const dogInfoGallery = document.getElementById(\"dog-info-container\");\n        dogInfoContainers.forEach((container) => {\n            dogInfoGallery.appendChild(container);\n        });\n    });\n};\n\n//Make a container for every dog which houses all its info\n// 1 container and info appeneded\nfunction createDogContainer(dogData) {\n    //initalize a \"div\" container with class added\n\n    const formattedName = dogData.name.toLowerCase().replace(/\\s+/g, \"-\");\n    const li = document.createElement(\"li\");\n    li.classList.add(\"dog-item-info\", formattedName);\n    li.style.display = \"none\";\n\n    //Grab name data and appened it to container\n    const name = document.createElement(\"h3\");\n    name.textContent = dogData.name;\n    li.append(name);\n\n    //Grab Bred data ...\n    const bredFor = document.createElement(\"p\");\n    bredFor.textContent = `Bred For: ${dogData.bred_for}`;\n    li.append(bredFor);\n\n    //Grab temperment....\n    const temperament = document.createElement(\"p\");\n    temperament.textContent = `Temperament: ${dogData.temperament}`;\n    li.append(temperament);\n\n    //Grab life span....\n    const lifeSpan = document.createElement(\"p\");\n    lifeSpan.textContent = `Life Span: ${dogData.life_span}`;\n    li.append(lifeSpan);\n\n    //Grab... breed group\n    const breedGroup = document.createElement(\"p\");\n    breedGroup.textContent = `Breed Group: ${dogData.breed_group}`;\n    li.append(breedGroup);\n\n    //Grab height in both(in, cm) ...\n    const height = document.createElement(\"p\");\n    height.textContent = `Height: ${dogData.height.imperial} inches (${dogData.height.metric} cm)`;\n    li.append(height);\n\n    // Grab weight .......\n    const weight = document.createElement(\"p\");\n    weight.textContent = `Weight: ${dogData.weight.imperial} lbs (${dogData.weight.metric} kg)`;\n    li.append(weight);\n\n    return li;\n}\n\nfunction createImgContainer(dogImgData) {\n    // Format the name of the breed for usage in class and data attribute\n    const formattedName = dogImgData[0].breeds[0].name\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\");\n\n    // Grab container and unordered list\n    let container = document.querySelector(\".dog-img-container\");\n    let imgList = container.querySelector(\".dog-img-list\");\n\n    // Create an li for each image and add its class\n    const imgItem = document.createElement(\"li\");\n    imgItem.classList.add(\"dog-img-item\", formattedName);\n    imgItem.setAttribute(\"data-dog\", formattedName);\n\n    // Create an event listener for clicks on the image\n    imgItem.addEventListener(\"click\", () => {\n        // Get the dog type from the clicked image\n        let clickedDog = imgItem.getAttribute(\"data-dog\");\n\n        // Get all dog information containers\n        const allInfoContainers = document.querySelectorAll(\".dog-item-info\");\n\n        // Hide all dog information containers\n        allInfoContainers.forEach((container) => {\n            container.style.display = \"none\";\n        });\n\n        // Display only the container with the same dog type as the clicked image\n        const infoContainer = document.querySelector(\n            `.dog-item-info.${clickedDog}`\n        );\n        if (infoContainer) {\n            infoContainer.style.display = \"block\";\n        } else {\n            console.log(`No info container found for ${clickedDog}`);\n        }\n\n        // Show country container for the clicked dog\n        const countryContainer = document.querySelector(\n            `.country-container.${clickedDog}`\n        );\n        if (countryContainer) {\n            countryContainer.style.display = \"block\";\n        } else {\n            console.log(`No country container found for ${clickedDog}`);\n        }\n    });\n\n    // Create an image element from the API data\n    const imgEle = document.createElement(\"img\");\n    imgEle.src = dogImgData[0].url;\n    imgEle.alt = `${dogImgData[0].breeds[0].name}`;\n\n    // Append the image element to the li and the li to the image list\n    imgItem.appendChild(imgEle);\n    imgList.appendChild(imgItem);\n\n    return container;\n}\n\nfunction createCountryContainer() {\n    const container = document.createElement(\"div\");\n    container.classList.add(\"country-container\");\n    container.style.display = \"none\";\n\n    // Create an unordered list for country images\n    const imgList = document.createElement(\"ul\");\n    imgList.classList.add(\"country-img-list\");\n    container.appendChild(imgList);\n\n    // Add country images to the list\n    const countryImages = [\n        \"china.png\",\n        \"argentina.png\",\n        \"india.png\",\n        \"philippines.png\",\n        \"united-states.png\",\n        \"japan.png\",\n        \"brazil.png\",\n        \"russia.png\",\n    ];\n\n    countryImages.forEach((image) => {\n        const imgItem = document.createElement(\"li\");\n        const img = document.createElement(\"img\");\n        console.log(image);\n        img.src = `./imgs/${image}`;\n        img.alt = image.replace(\".png\", \"\");\n        imgItem.appendChild(img);\n        imgList.appendChild(imgItem);\n    });\n\n    return container;\n}\n"],"names":["document","addEventListener","fetchSelectedDogs","dogInfoContainers","dogImgContainers","dogPromises","map","dog","fetch","then","response","ok","Error","json","data","getDogInfo","dogData","id","headers","dogImg","catch","error","console","log","Promise","all","results","forEach","result","push","dogImgData","formattedName","breeds","name","toLowerCase","replace","container","querySelector","imgList","imgItem","createElement","classList","add","setAttribute","clickedDog","getAttribute","querySelectorAll","style","display","infoContainer","countryContainer","imgEle","src","url","alt","appendChild","createImgContainer","li","textContent","append","bredFor","bred_for","temperament","lifeSpan","life_span","breedGroup","breed_group","height","imperial","metric","weight","createDogContainer","dogInfoGallery","getElementById"],"sourceRoot":""}