/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_dog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/dog */ \"./src/scripts/dog.js\");\n/* harmony import */ var _scripts_maps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/maps */ \"./src/scripts/maps.js\");\n/* harmony import */ var _scripts_maps__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_scripts_maps__WEBPACK_IMPORTED_MODULE_1__);\n// imports\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  (0,_scripts_dog__WEBPACK_IMPORTED_MODULE_0__.fetchSelectedDogs)();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2tEO0FBQ1Q7QUFFekNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoREgsK0RBQWlCLENBQUMsQ0FBQztBQUN2QixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9iYWxkb2cvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnRzXG5pbXBvcnQgeyBmZXRjaFNlbGVjdGVkRG9ncyB9IGZyb20gXCIuL3NjcmlwdHMvZG9nXCI7XG5pbXBvcnQgeyBpbml0TWFwIH0gZnJvbSBcIi4vc2NyaXB0cy9tYXBzXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICBmZXRjaFNlbGVjdGVkRG9ncygpO1xufSk7XG4iXSwibmFtZXMiOlsiZmV0Y2hTZWxlY3RlZERvZ3MiLCJpbml0TWFwIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/dog.js":
/*!****************************!*\
  !*** ./src/scripts/dog.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchSelectedDogs: function() { return /* binding */ fetchSelectedDogs; }\n/* harmony export */ });\nconst breedToCountryMap = {\n  \"chinese-shar-pei\": \"china\",\n  \"bull-terrier\": \"argentina\",\n  \"golden-retriever\": \"india\",\n  \"shih-tzu\": \"philippines\",\n  \"australian-shepherd\": \"united-states\",\n  \"shiba-inu\": \"japan\",\n  rottweiler: \"brazil\",\n  \"doberman-pinscher\": \"russia\"\n};\nconst api_key = \"live_IMV5RlpU4XaI26YknUNIxE1fFnIbdBbStDAFX71eTd7LRttKRLdca6c8f2UDhLng\";\n\n// Basic fetch to grab breed info\nconst getDogInfo = dog => {\n  return fetch(`https://api.thedogapi.com/v1/breeds/search?q=${dog}`).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Something went wrong\");\n    }\n    return response.json();\n  }).then(data => {\n    return data[0];\n  });\n};\n\n// i.e of how to do grab with async\n// export const getDogImg = async (id) => {\n//     const response = await fetch(\n//         `https://api.thedogapi.com/v1/images/search?breed_ids=${id}\n//         `,\n//         {\n//             headers: {\n//                 \"x-api-key\": api_key,\n//             },\n//         }\n//     );\n//     if (!response.ok) {\n//         throw new Error(\"Something went wrong\");\n//     }\n//     const data = await response.json();\n//     return data;\n// };\n\n// Didnt need an async for this operation\nconst getDogImg = id => {\n  return fetch(`https://api.thedogapi.com/v1/images/search?breed_ids=${id}`, {\n    headers: {\n      \"x-api-key\": api_key\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Something went wrong\");\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n};\n\n// Func that calls getInfo/getImg\n// builds a container for each for each of them\n// calls both createDogContainer & createImgContainer\nconst fetchSelectedDogs = () => {\n  const dogs = [\"Chinese Shar-Pei\", \"Bull Terrier\",\n  //Argentina\n  \"Golden Retriever\",\n  // INDIA\n  \"Shih Tzu\",\n  //Phill\n  \"Australian Shepherd\",\n  // USA\n  \"Shiba Inu\",\n  // Japan\n  \"Rottweiler\",\n  //Brazil\n  \"Doberman Pinscher\" // Russia\n  ];\n\n  // initialize and empty array for conatiners to append to\n  const dogInfoContainers = [];\n  const dogImgContainers = [];\n\n  // Go over the dog Arr and map them\n  // grab every dogs promise(info/img)\n  const dogPromises = dogs.map(dog => {\n    return getDogInfo(dog).then(dogData => {\n      return getDogImg(dogData.id).then(dogImg => {\n        return {\n          dogData,\n          dogImg\n        };\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n  // console.log(dogPromises); -- gives an arry of 8 promises\n\n  // Go thru all the promises and extract the info/img\n  // push to the container\n  return Promise.all(dogPromises).then(results => {\n    // each result has a DogData and dogImg in it\n    results.forEach(result => {\n      // console.log(result);\n      dogImgContainers.push(createImgContainer(result.dogImg));\n      dogInfoContainers.push(createDogContainer(result.dogData));\n    });\n    const dogInfoGallery = document.getElementById(\"dog-info-container\");\n    dogInfoContainers.forEach(container => {\n      dogInfoGallery.appendChild(container);\n    });\n  });\n};\n\n//Make a container for every dog which houses all its info\n// 1 container and info appeneded\nfunction createDogContainer(dogData) {\n  //initalize a \"div\" container with class added\n\n  const formattedName = dogData.name.toLowerCase().replace(/\\s+/g, \"-\");\n  const li = document.createElement(\"li\");\n  li.classList.add(\"dog-item-info\", formattedName);\n  li.style.display = \"none\";\n\n  //Grab name data and appened it to container\n  const name = document.createElement(\"h3\");\n  name.textContent = dogData.name;\n  li.append(name);\n\n  //Grab Bred data ...\n  const bredFor = document.createElement(\"p\");\n  bredFor.textContent = `Bred For: ${dogData.bred_for}`;\n  li.append(bredFor);\n\n  //Grab temperment....\n  const temperament = document.createElement(\"p\");\n  temperament.textContent = `Temperament: ${dogData.temperament}`;\n  li.append(temperament);\n\n  //Grab life span....\n  const lifeSpan = document.createElement(\"p\");\n  lifeSpan.textContent = `Life Span: ${dogData.life_span}`;\n  li.append(lifeSpan);\n\n  //Grab... breed group\n  const breedGroup = document.createElement(\"p\");\n  breedGroup.textContent = `Breed Group: ${dogData.breed_group}`;\n  li.append(breedGroup);\n\n  //Grab height in both(in, cm) ...\n  const height = document.createElement(\"p\");\n  height.textContent = `Height: ${dogData.height.imperial} inches (${dogData.height.metric} cm)`;\n  li.append(height);\n\n  // Grab weight .......\n  const weight = document.createElement(\"p\");\n  weight.textContent = `Weight: ${dogData.weight.imperial} lbs (${dogData.weight.metric} kg)`;\n  li.append(weight);\n  return li;\n}\nfunction createImgContainer(dogImgData) {\n  // Format the name of the breed for usage in class and data attribute\n  const formattedName = dogImgData[0].breeds[0].name.toLowerCase().replace(/\\s+/g, \"-\");\n\n  // Grab container and unordered list\n  let container = document.querySelector(\".dog-img-container\");\n  let imgList = container.querySelector(\".dog-img-list\");\n\n  // Create an li for each image and add its class\n  const imgItem = document.createElement(\"li\");\n  imgItem.classList.add(\"dog-img-item\", formattedName);\n  imgItem.setAttribute(\"data-dog\", formattedName);\n\n  // Create an event listener for clicks on the image\n  imgItem.addEventListener(\"click\", () => {\n    // Get the dog type from the clicked image\n    let clickedDog = imgItem.getAttribute(\"data-dog\");\n\n    // Get all dog information containers\n    const allInfoContainers = document.querySelectorAll(\".dog-item-info\");\n\n    // Hide all dog information containers\n    allInfoContainers.forEach(container => {\n      container.style.display = \"none\";\n    });\n\n    // Display only the container with the same dog type as the clicked image\n    const infoContainer = document.querySelector(`.dog-item-info.${clickedDog}`);\n    if (infoContainer) {\n      infoContainer.style.display = \"block\";\n    } else {\n      console.log(`No info container found for ${clickedDog}`);\n    }\n\n    // Show country container for the clicked dog\n    const countryContainer = document.querySelector(`.country-container.${clickedDog}`);\n    if (countryContainer) {\n      countryContainer.style.display = \"block\";\n    } else {\n      console.log(`No country container found for ${clickedDog}`);\n    }\n  });\n\n  // Create an image element from the API data\n  const imgEle = document.createElement(\"img\");\n  imgEle.src = dogImgData[0].url;\n  imgEle.alt = `${dogImgData[0].breeds[0].name}`;\n\n  // Append the image element to the li and the li to the image list\n  imgItem.appendChild(imgEle);\n  imgList.appendChild(imgItem);\n  return container;\n}\nfunction createCountryContainer() {\n  const container = document.createElement(\"div\");\n  container.classList.add(\"country-container\");\n  container.style.display = \"none\";\n\n  // Create an unordered list for country images\n  const imgList = document.createElement(\"ul\");\n  imgList.classList.add(\"country-img-list\");\n  container.appendChild(imgList);\n\n  // Add country images to the list\n  const countryImages = [\"china.png\", \"argentina.png\", \"india.png\", \"philippines.png\", \"united-states.png\", \"japan.png\", \"brazil.png\", \"russia.png\"];\n  countryImages.forEach(image => {\n    const imgItem = document.createElement(\"li\");\n    const img = document.createElement(\"img\");\n    console.log(image);\n    img.src = `./imgs/${image}`;\n    img.alt = image.replace(\".png\", \"\");\n    imgItem.appendChild(img);\n    imgList.appendChild(imgItem);\n  });\n  return container;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/dog.js\n");

/***/ }),

/***/ "./src/scripts/maps.js":
/*!*****************************!*\
  !*** ./src/scripts/maps.js ***!
  \*****************************/
/***/ (function() {

eval("// export function initMap() {\n//     drawMap();\n// }\n// window.initMap = initMap;\n\n// async function drawMap() {\n//     google.charts.load(\"current\", {\n//         packages: [\"geochart\"],\n//         mapsApiKey: \"AIzaSyBKs1KRFvsVDje7wSqK8LuK9AzJunG_4ro\",\n//         callback: drawRegionsMap,\n//     });\n\n//     google.charts.setOnLoadCallback(drawRegionsMap);\n\n//     function drawRegionsMap() {\n//         var data = google.visualization.arrayToDataTable([\n//             [\"Continent\", \"Dog Population(million's)\"],\n//             [\"USA\", 75.8], // austrilian\n//             [\"BRAZIL\", 35.7], //  rott\n//             [\"CHINA\", 27.4], // shar\n//             [\"RUSSIA\", 15], // dobberman\n//             [\"JAPAN\", 12], //shibu\n//             [\"PHILLIPINES\", 11.6], // Shih Tzu\n//             [\"INDIA\", 10.2], // Golden\n//             [\"ARGENTINA\", 9.2], // bull\n//         ]);\n\n//         var options = { colorAxis: { colors: [\"white\", \"white\"] } };\n\n//         var chart = new google.visualization.GeoChart(\n//             document.getElementById(\"regions_div\")\n//         );\n\n//         chart.draw(data, options);\n//     }\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tYXBzLmpzLmpzIiwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvYmFsZG9nLy4vc3JjL3NjcmlwdHMvbWFwcy5qcz80YjYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4cG9ydCBmdW5jdGlvbiBpbml0TWFwKCkge1xuLy8gICAgIGRyYXdNYXAoKTtcbi8vIH1cbi8vIHdpbmRvdy5pbml0TWFwID0gaW5pdE1hcDtcblxuLy8gYXN5bmMgZnVuY3Rpb24gZHJhd01hcCgpIHtcbi8vICAgICBnb29nbGUuY2hhcnRzLmxvYWQoXCJjdXJyZW50XCIsIHtcbi8vICAgICAgICAgcGFja2FnZXM6IFtcImdlb2NoYXJ0XCJdLFxuLy8gICAgICAgICBtYXBzQXBpS2V5OiBcIkFJemFTeUJLczFLUkZ2c1ZEamU3d1NxSzhMdUs5QXpKdW5HXzRyb1wiLFxuLy8gICAgICAgICBjYWxsYmFjazogZHJhd1JlZ2lvbnNNYXAsXG4vLyAgICAgfSk7XG5cbi8vICAgICBnb29nbGUuY2hhcnRzLnNldE9uTG9hZENhbGxiYWNrKGRyYXdSZWdpb25zTWFwKTtcblxuLy8gICAgIGZ1bmN0aW9uIGRyYXdSZWdpb25zTWFwKCkge1xuLy8gICAgICAgICB2YXIgZGF0YSA9IGdvb2dsZS52aXN1YWxpemF0aW9uLmFycmF5VG9EYXRhVGFibGUoW1xuLy8gICAgICAgICAgICAgW1wiQ29udGluZW50XCIsIFwiRG9nIFBvcHVsYXRpb24obWlsbGlvbidzKVwiXSxcbi8vICAgICAgICAgICAgIFtcIlVTQVwiLCA3NS44XSwgLy8gYXVzdHJpbGlhblxuLy8gICAgICAgICAgICAgW1wiQlJBWklMXCIsIDM1LjddLCAvLyAgcm90dFxuLy8gICAgICAgICAgICAgW1wiQ0hJTkFcIiwgMjcuNF0sIC8vIHNoYXJcbi8vICAgICAgICAgICAgIFtcIlJVU1NJQVwiLCAxNV0sIC8vIGRvYmJlcm1hblxuLy8gICAgICAgICAgICAgW1wiSkFQQU5cIiwgMTJdLCAvL3NoaWJ1XG4vLyAgICAgICAgICAgICBbXCJQSElMTElQSU5FU1wiLCAxMS42XSwgLy8gU2hpaCBUenVcbi8vICAgICAgICAgICAgIFtcIklORElBXCIsIDEwLjJdLCAvLyBHb2xkZW5cbi8vICAgICAgICAgICAgIFtcIkFSR0VOVElOQVwiLCA5LjJdLCAvLyBidWxsXG4vLyAgICAgICAgIF0pO1xuXG5cbi8vICAgICAgICAgdmFyIG9wdGlvbnMgPSB7IGNvbG9yQXhpczogeyBjb2xvcnM6IFtcIndoaXRlXCIsIFwid2hpdGVcIl0gfSB9O1xuXG4vLyAgICAgICAgIHZhciBjaGFydCA9IG5ldyBnb29nbGUudmlzdWFsaXphdGlvbi5HZW9DaGFydChcbi8vICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVnaW9uc19kaXZcIilcbi8vICAgICAgICAgKTtcblxuLy8gICAgICAgICBjaGFydC5kcmF3KGRhdGEsIG9wdGlvbnMpO1xuLy8gICAgIH1cbi8vIH1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIn0=\n//# sourceURL=webpack-internal:///./src/scripts/maps.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9iYWxkb2cvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;